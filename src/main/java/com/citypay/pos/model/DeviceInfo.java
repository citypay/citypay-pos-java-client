/*
 * CityPay POS API
 * CityPay Point of Sale API for payment with card present devices including EMV readers and contactless POS readers.  The API makes it simple to add EMV and contactless card acceptance to iOS, Android, Tablet and desktop applicaitons using a HTTPS protocol. It segregates the complexity of payment processing from the sales environment and eliminates any necessity for the target system to handle card data. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@citypay.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.citypay.pos.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DeviceInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-11-22T10:53:11.095Z")
public class DeviceInfo {
  @SerializedName("name")
  private String name = null;

  @SerializedName("serialno")
  private String serialno = null;

  @SerializedName("portable")
  private Boolean portable = null;

  @SerializedName("busy")
  private Boolean busy = null;

  @SerializedName("battery_charging")
  private Boolean batteryCharging = null;

  @SerializedName("battery_percentage")
  private Integer batteryPercentage = null;

  @SerializedName("printer")
  private Boolean printer = null;

  public DeviceInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the device
   * @return name
  **/
  @ApiModelProperty(value = "The name of the device")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DeviceInfo serialno(String serialno) {
    this.serialno = serialno;
    return this;
  }

   /**
   * The serial number of the device
   * @return serialno
  **/
  @ApiModelProperty(value = "The serial number of the device")
  public String getSerialno() {
    return serialno;
  }

  public void setSerialno(String serialno) {
    this.serialno = serialno;
  }

  public DeviceInfo portable(Boolean portable) {
    this.portable = portable;
    return this;
  }

   /**
   * Whether the device is portable
   * @return portable
  **/
  @ApiModelProperty(value = "Whether the device is portable")
  public Boolean isPortable() {
    return portable;
  }

  public void setPortable(Boolean portable) {
    this.portable = portable;
  }

  public DeviceInfo busy(Boolean busy) {
    this.busy = busy;
    return this;
  }

   /**
   * Whether the device is busy or available for a transaction
   * @return busy
  **/
  @ApiModelProperty(value = "Whether the device is busy or available for a transaction")
  public Boolean isBusy() {
    return busy;
  }

  public void setBusy(Boolean busy) {
    this.busy = busy;
  }

  public DeviceInfo batteryCharging(Boolean batteryCharging) {
    this.batteryCharging = batteryCharging;
    return this;
  }

   /**
   * Whether the device is currently charging
   * @return batteryCharging
  **/
  @ApiModelProperty(value = "Whether the device is currently charging")
  public Boolean isBatteryCharging() {
    return batteryCharging;
  }

  public void setBatteryCharging(Boolean batteryCharging) {
    this.batteryCharging = batteryCharging;
  }

  public DeviceInfo batteryPercentage(Integer batteryPercentage) {
    this.batteryPercentage = batteryPercentage;
    return this;
  }

   /**
   * A percentage value of the battery
   * @return batteryPercentage
  **/
  @ApiModelProperty(value = "A percentage value of the battery")
  public Integer getBatteryPercentage() {
    return batteryPercentage;
  }

  public void setBatteryPercentage(Integer batteryPercentage) {
    this.batteryPercentage = batteryPercentage;
  }

  public DeviceInfo printer(Boolean printer) {
    this.printer = printer;
    return this;
  }

   /**
   * Whether the device has a printer
   * @return printer
  **/
  @ApiModelProperty(value = "Whether the device has a printer")
  public Boolean isPrinter() {
    return printer;
  }

  public void setPrinter(Boolean printer) {
    this.printer = printer;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceInfo deviceInfo = (DeviceInfo) o;
    return Objects.equals(this.name, deviceInfo.name) &&
        Objects.equals(this.serialno, deviceInfo.serialno) &&
        Objects.equals(this.portable, deviceInfo.portable) &&
        Objects.equals(this.busy, deviceInfo.busy) &&
        Objects.equals(this.batteryCharging, deviceInfo.batteryCharging) &&
        Objects.equals(this.batteryPercentage, deviceInfo.batteryPercentage) &&
        Objects.equals(this.printer, deviceInfo.printer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, serialno, portable, busy, batteryCharging, batteryPercentage, printer);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceInfo {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    serialno: ").append(toIndentedString(serialno)).append("\n");
    sb.append("    portable: ").append(toIndentedString(portable)).append("\n");
    sb.append("    busy: ").append(toIndentedString(busy)).append("\n");
    sb.append("    batteryCharging: ").append(toIndentedString(batteryCharging)).append("\n");
    sb.append("    batteryPercentage: ").append(toIndentedString(batteryPercentage)).append("\n");
    sb.append("    printer: ").append(toIndentedString(printer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

